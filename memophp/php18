Dans ce chapitre, vous allez créer et mettre en place la base de données pour votre site de partage de recettes.

Pour communiquer avec MySQL, nous pouvons utiliser différents logiciels : de l'invite de commandes jusqu'à des logiciels accessibles par le navigateur. Ici, vous allez utiliser phpMyAdmin, l'un des outils les plus connus permettant de manipuler une base de données MySQL.

phpMyAdmin est livré avec MAMP et XAMPP ; vous allez donc pouvoir vous en servir tout de suite !
Créez une table pour les recettes

Pour créer une table qui correspond à une recette, nous allons devoir associer chacune des propriétés de nos recettes à un champ de la table, et lui associer un type de données.

Ensuite, nous devons définir un champ qui servira d'identifiant unique (un peu comme un numéro de Sécurité sociale), de sorte à pouvoir retrouver chaque recette :
Les types de champs MySQL

Alors que PHP ne propose que quelques types de données que l'on connaît bien maintenant ( int  , string  , bool  …), MySQL propose une quantité très importante de types de données.

Mais dans la pratique, vous n'aurez besoin de jongler qu'entre les quatre types de données suivants :

    INT : nombre entier ;

    VARCHAR : texte court (entre 1 et 255 caractères) ;

    TEXT : long texte (on peut y stocker un roman sans problème) ;

    DATE : date (jour, mois, année).

Cela couvrira 99 % de vos besoins, et avec l'expérience vous apprendrez à optimiser vos bases de données, et l'intérêt des autres types de données de MySQL.
Les clés primaires

Toute table doit posséder un champ qui joue le rôle de clé primaire. La clé primaire permet d'identifier de manière unique une entrée dans la table. En général, on utilise le champ id comme clé primaire, comme on vient de le faire.

Prenez le réflexe de créer à chaque fois ce champ « id » en lui donnant l'index PRIMARY  , ce qui aura pour effet d'en faire une clé primaire.

Vous en profiterez en général pour cocher la case AUTO_INCREMENT pour que ce champ gère lui-même les nouvelles valeurs automatiquement (1, 2, 3, 4…).
Modifiez une table

Mais… je ne vais pas devoir passer par phpMyAdmin à chaque fois que je veux ajouter ou supprimer un élément, quand même ?

Non, bien sûr que non.

Vous allez apprendre à le faire en PHP dans les chapitres suivants.

Il nous reste encore à découvrir deux des nombreuses fonctionnalités offertes par phpMyAdmin, et nous aurons terminé notre tour d'horizon de cet outil : l'import et l'export de base de données.
Importez et exportez des données

Vous allez ici vous intéresser à l'onglet "Import" de phpMyAdmin, dont le principal intérêt est de créer une base de données entière avec tables et données :

À votre tour d'essayer ! Cliquez ici pour télécharger le fichier d'import de la base de données sur le projet fil rouge de ce cours.

Explorez maintenant l'onglet « Exporter » de phpMyAdmin.

C'est ici que vous allez pouvoir récupérer votre base de données sur le disque dur, sous forme de fichier texte .sql  (qui contiendra des tonnes de requêtes SQL).

Le fichier que vous allez obtenir grâce à « l'exportation » de phpMyAdmin, c'est un fichier qui dit à MySQL comment recréer votre base de données (avec des requêtes en langage SQL). Et ce fichier-là est tout à fait lisible.

À quoi sert ce fichier ?

On peut s'en servir pour deux choses :

    Transmettre votre base de données sur Internet : pour le moment, votre base de données se trouve sur votre disque dur. Mais lorsque vous voudrez héberger votre site sur Internet, il faudra utiliser la base de données en ligne de votre hébergeur ! Le fichier .sql que vous allez générer vous permettra de reconstruire la base de données à l'identique.

    Faire une copie de sauvegarde de la base de données : on ne sait jamais, si vous faites une bêtise ou si quelqu'un réussit à détruire toutes les informations sur votre site, vous serez bien content d'avoir une copie de secours sur votre disque dur !

En résumé

    phpMyAdmin est un outil qui nous permet de visualiser rapidement l'état de notre base de données et de la modifier, sans avoir à écrire de requêtes SQL.

    On crée généralement un champ nommé id  qui sert à numéroter les entrées d'une table. Ce champ doit avoir un index PRIMARY (on dit qu'on crée une clé primaire) et l'option AUTO_INCREMENT qui permet de laisser MySQL gérer la numérotation.

    MySQL gère différents types de données pour ses champs, à la manière de PHP. On trouve des types adaptés au stockage de nombres, de textes, de dates, etc.

    phpMyAdmin possède un outil d'importation et d'exportation des tables qui nous permettra notamment d'envoyer notre base de données sur Internet ou d'en conserver une copie.
