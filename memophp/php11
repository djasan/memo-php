Mais notre projet va contenir plusieurs pages :

    Une page "recettes".

    Une page d'√©dition et de cr√©ation de recette.

    Une page avec un formulaire de contact.

Et pour pouvoir acc√©der √† ces pages, il faudra n√©cessairement quelques liens HTML regroup√©s dans un menu principal.

Vous est-il d√©j√† arriv√© de vouloir modifier le menu de votre site et de devoir pour cela corriger le code HTML de chacune de vos pages web ?

Le menu d'une page web appara√Æt en effet sur chacune des pages, et vous avez tr√®s certainement d√ª le recopier sur chacune d'elles. √áa marche, mais ce n'est pas tr√®s pratique‚Ä¶

Une des fonctionnalit√©s les plus simples et les plus utiles de PHP est l'inclusion de pages.

On peut tr√®s facilement inclure toute une page, ou un bout de page √† l'int√©rieur d'une autre. Cela vous √©vitera d'avoir √† copier le m√™me code HTML plusieurs fois.

Au fil de ce chapitre, vous allez d√©couvrir un des multiples avantages que vous donne le PHP lors de la cr√©ation de votre site. C'est d'ailleurs ce qui m'a fait instantan√©ment aimer ce langage lorsque je l'ai d√©couvert, alors que je venais comme vous seulement d'apprendre le HTML et le CSS. üòâ
Visualisez le d√©coupage d'une page web

La plupart des sites web sont g√©n√©ralement d√©coup√©s selon le sch√©ma suivant.
Ce sch√©ma montre le d√©coupage usuel d'une page web : la section du haut est d√©di√©e √† l'en-t√™te ; la section du milieu est consacr√©e au contenu, le corps d'une page ; et la section du bas correspond au pied de page.
D√©coupage usuel d'une page web

Jusqu'ici, vous √©tiez condamn√© √† copier sur chaque page √† l'identique :

    l'en-t√™te ;

    le menu ;

    le pied de page.

Cela donnait du code lourd et r√©p√©titif sur toutes les pages !

Regardez le code d'exemple ci-dessous qui repr√©sente une page web avec un en-t√™te, un menu et un pied de page. Appelons cette page :  index.php  .

<!DOCTYPE html>

<html>

    <head>

        <meta charset="utf-8" />

        <title>Mon super site</title>

    </head>

 

    <body>

 

    <!-- L'en-t√™te -->

    

    <header>

        <!-- Le menu -->

    

        <nav id="menu">        

            <div class="element_menu">

                <h3>Titre menu</h3>

                <ul>

                    <li><a href="page1.html">Lien</a></li>

                    <li><a href="page2.html">Lien</a></li>

                    <li><a href="page3.html">Lien</a></li>

                </ul>

            </div>    

        </nav>

       

    </header>

    

    <!-- Le corps -->

    

    <div id="corps">

        <h1>Mon super site</h1>

        

        <p>

            Bienvenue sur mon super site !<br />

            Vous allez adorer ici, c'est un site g√©nial qui va parler de... euh... Je cherche encore un peu le th√®me de mon site. :-D

        </p>

    </div>

    

    <!-- Le pied de page -->

    

    <footer id="pied_de_page">

        <p>Copyright moi, tous droits r√©serv√©s</p>

    </footer>

    

    </body>

</html>

D'une page √† l'autre, ce site contiendra √† chaque fois le m√™me code pour l'en-t√™te, le menu et le pied de page ! En effet, seul le contenu du corps change, en temps normal.
Pensez votre contenu web en blocs fonctionnels

En PHP, nous pouvons facilement ins√©rer d'autres pages. Mais on peut aussi ins√©rer des morceaux de pages, √† l'int√©rieur d'une page.

Le principe de fonctionnement des inclusions en PHP est plut√¥t simple √† comprendre. Vous avez un site web compos√© de, disons, vingt pages. Sur chaque page, il y a un menu, toujours le m√™me. Pourquoi ne pas √©crire ce menu (et seulement lui) une seule fois dans une page header.php  ?

En PHP, vous allez pouvoir inclure votre menu sur toutes vos pages.

Lorsque vous voudrez modifier votre menu, vous n'aurez qu'√† modifier header.php  , et l'ensemble des pages de votre site web sera automatiquement mis √† jour !

Maintenant, imaginez que vous ayez besoin de fonctions ou de variables sur toutes les pages du site.

Cr√©ons un nouveau fichier PHP : nous allons ins√©rer uniquement le code HTML correspondant √† votre menu, comme ceci :

<nav id="menu">        

    <div class="element_menu">

        <h3>Titre menu</h3>

        <ul>

            <li><a href="page1.html">Lien</a></li>

            <li><a href="page2.html">Lien</a></li>

            <li><a href="page3.html">Lien</a></li>

        </ul>

    </div>    

</nav>

Faites de m√™me pour la page pied_de_page.php et toute autre page utile, en fonction des besoins de votre site.

Mais‚Ä¶ la page headers.php ne contient pas le moindre code PHP‚Ä¶ c'est normal ?

Une page dont l'extension est .php  peut tr√®s bien ne contenir aucune balise PHP (m√™me si c'est plut√¥t rare). Dans ce cas, cela redevient une page HTML classique qui n'est pas modifi√©e avant l'envoi.

En th√©orie, vous pourriez tr√®s bien enregistrer votre page avec l'extension .html  :  header.html  .

N√©anmoins, afin d'√©viter de m√©langer des pages .php  et .html  sur votre site, je vous recommande de travailler uniquement avec l'extension .php  √† partir de maintenant.

Maintenant que vos ¬´ morceaux de pages ¬ª sont pr√™ts :

    Reprenez les pages de votre site, par exemple la page d'accueil nomm√©e index.php  .

    Remplacez le menu par le code PHP suivant :

<?php include('header.php'); ?>

Cette instruction ordonne √† l'ordinateur :

    ¬´ Ins√®re ici le contenu de la page header.php ¬ª.

Si nous reprenons le code que nous avons vu tout √† l'heure et que nous rempla√ßons chaque code r√©p√©titif par un include (lignes 10, 12 et 27), cela donne le code source suivant :

<!DOCTYPE html>

<html>

    <head>

        <meta charset="utf-8" />

        <title>Mon super site</title>

    </head>

 

    <body>

 

    <?php include('header.php'); ?>

    

    <!-- Le corps -->

    

    <div id="corps">

        <h1>Mon super site</h1>

        

        <p>

            Bienvenue sur mon super site !<br />

            Vous allez adorer ici, c'est un site g√©nial qui va parler de... euh... Je cherche encore un peu le th√®me de mon site. :-D

        </p>

    </div>

    

    <!-- Le pied de page -->

    

    <?php include('footer.php'); ?>

    

    </body>

</html>

Ce code suppose que votre page index.php  et celles qui sont incluses (comme header.php  ) sont dans le m√™me dossier.

Si le menu √©tait dans un sous-dossier appel√© includes , il aurait fallu √©crire :

<?php include('includes/header.php'); ?>

C'est le m√™me principe que pour les liens relatifs, que vous connaissez d√©j√† dans le langage HTML.

Nous avons vu que la page PHP √©tait g√©n√©r√©e ; donc la question que vous devez vous poser est : que re√ßoit le visiteur ? Eh bien, il re√ßoit exactement le m√™me code qu'avant !

La page finale que re√ßoit le visiteur est identique √† celle que je vous ai montr√©e au d√©but du chapitre‚Ä¶ mais vous, vous avez √©norm√©ment gagn√© en flexibilit√©, puisque votre code n'est plus recopi√© 150 fois inutilement.

Le nombre d' include  par page n'est pas limit√© ; par cons√©quent, vous pouvez d√©couper votre code en autant de sous-parties que vous le souhaitez !
R√©organisez votre site de recettes

Bon, appliquons ce que nous venons d'apprendre √† notre projet, maintenant !

Nous avons besoin de fonctions et de variables pour afficher la liste de nos articles, et puisque nous aurons peut √™tre besoin de les r√©utiliser (surtout les fonctions), nous allons √©galement extraire ces concepts dans leurs propres fichiers.

Nous aurons donc deux fichiers, variables.php et functions.php  , qui contiendront respectivement les variables et les fonctions de notre projet :

<?php

// variables.php


$users = [

    [

        'full_name' => 'Micka√´l Andrieu',

        'email' => 'mickael.andrieu@exemple.com',

        'age' => 34,

    ],

    [

        'full_name' => 'Mathieu Nebra',

        'email' => 'mathieu.nebra@exemple.com',

        'age' => 34,

    ],

    [

        'full_name' => 'Laur√®ne Castor',

        'email' => 'laurene.castor@exemple.com',

        'age' => 28,

    ],

];


$recipes = [

    [

        'title' => 'Cassoulet',

        'recipe' => '',

        'author' => 'mickael.andrieu@exemple.com',

        'is_enabled' => true,

    ],

    [

        'title' => 'Couscous',

        'recipe' => '',

        'author' => 'mickael.andrieu@exemple.com',

        'is_enabled' => false,

    ],

    [

        'title' => 'Escalope milanaise',

        'recipe' => '',

        'author' => 'mathieu.nebra@exemple.com',

        'is_enabled' => true,

    ],

    [

        'title' => 'Salade Romaine',

        'recipe' => '',

        'author' => 'laurene.castor@exemple.com',

        'is_enabled' => false,

    ],

];

<?php

// functions.php


function isValidRecipe(array $recipe) : bool

{

    if (array_key_exists('is_enabled', $recipe)) {

        $isEnabled = $recipe['is_enabled'];

    } else {

        $isEnabled = false;

    }


    return $isEnabled;

}


function displayAuthor(string $authorEmail, array $users) : string

{

    for ($i = 0; $i < count($users); $i++) {

        $author = $users[$i];

        if ($authorEmail === $author['email']) {

            return $author['full_name'] . '(' . $author['age'] . ' ans)';

        }

    }

}


function getRecipes(array $recipes) : array

{

    $validRecipes = [];


    foreach($recipes as $recipe) {

        if (isValidRecipe($recipe)) {

            $validRecipes[] = $recipe;

        }

    }


    return $validRecipes;

}

Codez l'en-t√™te du site

Ensuite, nous aurons √©videment un en-t√™te de site avec un menu et un titre :

<!-- header.php -->

<nav class="navbar navbar-expand-lg navbar-light bg-light">

  <div class="container-fluid">

    <a class="navbar-brand" href="index.php">Site de recettes</a>

    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">

      <span class="navbar-toggler-icon"></span>

    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">

      <ul class="navbar-nav me-auto mb-2 mb-lg-0">

        <li class="nav-item">

          <a class="nav-link active" aria-current="page" href="index.php">Home</a>

        </li>

        <li class="nav-item">

          <a class="nav-link" href="contact.php">Contact</a>

        </li>

      </ul>

    </div>

  </div>

</nav>

Le menu est basique pour l'instant, mais il vous permet de passer de la page d'accueil √† la page de contact, par exemple.

Il est un peu compliqu√© √† comprendre, ton code HTML, non ?

Oui, la partie visuelle est assur√©e par le framework CSS Bootstrap 5 : il n'est pas n√©cessaire de le conna√Ætre pour suivre ce cours. Gardez juste en t√™te que chacune des classes ajout√©es va permettre de concevoir la page correctement. Mais si cela vous ennuie, supprimez toutes les classes et le projet restera fonctionnel, c'est promis !
Codez le pied de page du site

Cette partie du site reste "ferr√©e" en bas de page, et contient quelques liens et surtout les conditions d'utilisation du site (les fameux "copyrights") :

<!-- footer.php -->

<footer class="bg-light text-center text-lg-start mt-auto">

  <div class="text-center p-3">

    ¬© 2021 Copyright:

    <a class="text-dark" href="https://openclassrooms.com/">OpenClassrooms</a>

  </div>

</footer>

Codez le corps de la page d'accueil du site

Maintenant, nous pouvons reprendre ce que nous avions construit ensemble dans les chapitres pr√©c√©dents. Nous allons avoir besoin d'inclure nos variables et nos fonctions :

<!-- index.php -->

<!DOCTYPE html>

<html>

<head>

    <meta charset="UTF-8">

    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Site de recettes - Page d'accueil</title>

    <link

        href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" 

        rel="stylesheet"

    >

</head>

<body class="d-flex flex-column min-vh-100">

    <div class="container">


    <?php include_once('header.php'); ?>

        <h1>Site de recettes</h1>


        <!-- inclusion des variables et fonctions -->

        <?php

            include_once('variables.php');

            include_once('functions.php');

        ?>


        <!-- inclusion de l'ent√™te du site -->

        <?php include_once('header.php'); ?>

        

        <?php foreach(getRecipes($recipes) as $recipe) : ?>

            <article>

                <h3><?php echo $recipe['title']; ?></h3>

                <div><?php echo $recipe['recipe']; ?></div>

                <i><?php echo displayAuthor($recipe['author'], $users); ?></i>

            </article>

        <?php endforeach ?>

    </div>


    <!-- inclusion du bas de page du site -->

    <?php include_once('footer.php'); ?>

</body>

</html>

Press√©(e) de voir le r√©sultat ?
Capture d'√©cran de l'affichage des recettes actives sur la page web. On voit l'en-t√™te et le pied de page qui contiennent le menu et le copyright.
Affichage du site web avec l'en-t√™te et le pied de page
Codez le corps de la page de contact du site

En bonus, nous pourrions ajouter un simple formulaire HTML.

Nous verrons dans les prochains chapitres comment les traiter avec PHP de mani√®re √† avoir une navigation fonctionnelle.

Rien d'extraordinaire, voici la page de contact √† ce stade du projet :

<!-- contact.php -->

<!DOCTYPE html>

<html>

<head>

    <meta charset="UTF-8">

    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Site de recettes - Formulaire de Contact</title>

    <link

        href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" 

        rel="stylesheet"

    >

</head>

<body class="d-flex flex-column min-vh-100">

    <div class="container">


    <?php include_once('header.php'); ?>

        <h1>Contactez nous</h1>

        <form>

            <div class="mb-3">

                <label for="email" class="form-label">Email</label>

                <input type="email" class="form-control" id="email" name="email" aria-describedby="email-help">

                <div id="email-help" class="form-text">Nous ne revendrons pas votre email.</div>

            </div>

            <div class="mb-3">

                <label for="message" class="form-label">Votre message</label>

                <textarea class="form-control" placeholder="Exprimez vous" id="message" name="message"></textarea>

            </div>

            <button type="submit" class="btn btn-primary">Envoyer</button>

        </form>

        <br />

    </div>


    <?php include_once('footer.php'); ?>

</body>

</html>


Pour un r√©sultat visuel incroyable !
Capture de l'affichage de la page de contact avec une en-t√™te et le pied de page
Page de formulaire de contact
En r√©sum√©

    Une page PHP peut inclure une autre page (ou un morceau de page) gr√¢ce √† l'instruction  include  .

    L'instruction include sera remplac√©e par le contenu de la page demand√©e.

    Cette technique, tr√®s simple √† mettre en place, permet par exemple de placer les menus de son site dans un fichier header.php que l'on inclura dans toutes les pages. Cela permet de centraliser le code des menus, alors qu'on √©tait auparavant oblig√©s de le copier dans chaque page sur nos sites statiques en HTML et CSS.
